<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学无止境</title>
  
  
  <link href="https://blog.chanceyliu.com/atom.xml" rel="self"/>
  
  <link href="https://blog.chanceyliu.com/"/>
  <updated>2021-09-21T07:32:14.009Z</updated>
  <id>https://blog.chanceyliu.com/</id>
  
  <author>
    <name>Chanceyliu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Typora结合PicGo上传图片</title>
    <link href="https://blog.chanceyliu.com/2021/09/21/Typora%E7%BB%93%E5%90%88PicGo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
    <id>https://blog.chanceyliu.com/2021/09/21/Typora%E7%BB%93%E5%90%88PicGo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</id>
    <published>2021-09-21T07:30:41.000Z</published>
    <updated>2021-09-21T07:32:14.009Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：使用 Typora 工具编写 markdown 文件的时候，引用截图或者本地图片，这些图片资源都是存储在本地的，当你想将文档直接复制粘贴到外部供别人观看的时候，就会存在图片资源找不到的情况。于是我们可以通过 PicGo 结合腾讯云的 Cos 服务建立我们自己的图床，并通过设置，当 Typora 粘贴图片时，直接上传至 cos 上。这样图片资源就不会失效了。</p></blockquote><ul><li>官方配置手册：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E8%85%BE%E8%AE%AF%E4%BA%91cos">https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E8%85%BE%E8%AE%AF%E4%BA%91cos</a></li></ul><ol><li><p>下载 PicGo，这是 GitHub <a href="https://github.com/Molunerfinn/PicGo">地址</a></p></li><li><p>在腾讯云官网创建自己的 Cos 存储桶<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318143637691.png" alt="image-20210318143637691"></p></li><li><p>点击密钥管理，创建自己的 API 密钥<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318144536670.png" alt="image-20210318144536670"></p></li><li><p>填写对应信息<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318145255406.png" alt="image-20210318145255406" style="zoom:150%;" /></p><ul><li>APPID、SecretId 和 SecretKey 获取<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318145552036.png" alt="image-20210318145552036"></li><li>存储空间名和存储区域<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318145705774.png" alt="image-20210318145705774"></li><li>存储路径，需要点开存储桶，在该桶下创建一个新文件，然后填写路径</li></ul></li><li><p>设置 Typora<img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20210318145904880.png" alt="image-20210318145904880"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：使用 Typora 工具编写 markdown 文件的时候，引用截图或者本地图片，这些图片资源都是存储在本地的，当你想将文档直接复制粘贴到外部供别人观看的时候，就会存在图片资源找不到的情况。于是我们可以通过 PicGo 结合腾讯云的 Cos </summary>
      
    
    
    
    <category term="其他" scheme="https://blog.chanceyliu.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Typora" scheme="https://blog.chanceyliu.com/tags/Typora/"/>
    
    <category term="PicGo" scheme="https://blog.chanceyliu.com/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>主机DIY</title>
    <link href="https://blog.chanceyliu.com/2021/09/21/%E4%B8%BB%E6%9C%BADIY/"/>
    <id>https://blog.chanceyliu.com/2021/09/21/%E4%B8%BB%E6%9C%BADIY/</id>
    <published>2021-09-21T07:30:41.000Z</published>
    <updated>2021-09-21T07:31:36.357Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-CPU："><a href="#1-CPU：" class="headerlink" title="1. CPU："></a>1. CPU：</h3><ul><li><p><strong>散片与盒装：</strong>散片价格便宜，但容易踩坑，如果散片与盒装价格差距不大的情况下买盒装。选择散片的话需要好好调研一下去什么店铺买。（CPU 只存在二手，基本上可以说不存在造假的情况）</p></li><li><p><strong>如何查看型号（Intel）：</strong><img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20201219193405412.png" alt="image-20201219193405412"></p><ul><li>性能：700 代表性能等级，越高代表性能越好</li><li>后缀：K——&gt;&gt;可超频，F——&gt;&gt;没有核心。可超频的 CPU 需要选择支持超频的主板，否则无法超频。没有核显的 F 版 CPU 要搭配独立显卡才能开机点亮平面。</li></ul></li><li><p><strong>如何查看型号（AMD）：</strong><img src="https://chanceyliu-1301861058.cos.ap-chongqing.myqcloud.com/markdown/image-20201219201451745.png" alt="image-20201219201451745"></p><ul><li>后缀：字母 G 表示有核显，字母 X 没有明确意思，一般性能强一点。如 R5 3600X 比 R5 3600 性能高一点，主频高一点。XT 代表官方优选型号，拥有更强的超频能力。</li></ul></li><li><p><strong>暂定计划：</strong></p><table><thead><tr><th>型号</th><th>功率</th><th>核心线程</th><th>主频</th><th align="center">京东-盒装价格</th></tr></thead><tbody><tr><td>i7-10700F</td><td>65W</td><td>8 核 16 线程</td><td>2.90 GHz</td><td align="center">2099（1859 散）</td></tr><tr><td><span style="color:red">i7-10700</span></td><td>65W</td><td>8 核 16 线程</td><td>2.90 GHz</td><td align="center">2399（1899 散）</td></tr><tr><td><span style="color:red">R5-5600X</span></td><td>65W</td><td>6 核 12 线程</td><td>3.7GHz</td><td align="center">2129（到 2000 以内才能算有性价比）</td></tr><tr><td>R5-3700X</td><td>65W</td><td>8 核 16 线程</td><td>3.6GHz</td><td align="center">2449</td></tr></tbody></table></li><li><p><strong>参考链接：</strong></p><ul><li><a href="https://zhuanlan.zhihu.com/p/157597328">https://zhuanlan.zhihu.com/p/157597328</a></li></ul></li></ul><h3 id="2-主板："><a href="#2-主板：" class="headerlink" title="2.主板："></a>2.主板：</h3><ul><li><p><strong>大厂商：</strong>微星，华擎，技嘉，七彩虹</p></li><li><p><strong>超频：</strong>Z 系列的主板才支持 Intel CPU 超频。锐龙 CPU 则无需考虑这一点</p></li><li><p><strong>注意点：</strong></p><ul><li>供电能力</li><li>接口完整度</li><li>预算尽量充足不要节省</li><li><strong>主板规格一定要和机箱协调好</strong></li></ul></li><li><p><strong>暂定计划：</strong></p><table><thead><tr><th>产品名</th><th>WI-FI</th><th>超频</th><th align="center">价格</th></tr></thead><tbody><tr><td>微星（MSI）MAG B460M MORTAR WIFI 迫击炮电脑主板</td><td>是</td><td>否</td><td align="center">849</td></tr><tr><td>Z490 系列（暂不考虑超频）</td><td>-</td><td>是</td><td align="center">-</td></tr></tbody></table></li><li><p><strong>参考链接：</strong></p><ul><li><a href="https://zhuanlan.zhihu.com/p/83516346">https://zhuanlan.zhihu.com/p/83516346</a></li></ul></li></ul><h3 id="3-显卡：（待考察）"><a href="#3-显卡：（待考察）" class="headerlink" title="3.显卡：（待考察）"></a>3.显卡：（待考察）</h3><h3 id="4-内存："><a href="#4-内存：" class="headerlink" title="4.内存："></a>4.内存：</h3><ul><li><strong>品牌：</strong>海力士、镁光</li><li><strong>颗粒：</strong></li><li><strong>注意：</strong>内存条频率会受限于主板，在主板参数中可以看到最高能支持的内存条频率。</li><li><strong>参考链接：</strong><ul><li><a href="https://zhuanlan.zhihu.com/p/83502558">https://zhuanlan.zhihu.com/p/83502558</a></li></ul></li></ul><h3 id="5-电源："><a href="#5-电源：" class="headerlink" title="5.电源："></a>5.电源：</h3><ul><li><strong>品牌：</strong><ul><li>一线：振华、海韵</li><li>二线：安钛克、全汉、台达、EVGA、酷冷至尊</li></ul></li><li><strong>功率算法：</strong>（cpu 功耗+显卡功耗+50W）×1.5=额定功率</li><li><strong>模组：</strong><ul><li>非模组：非模组电源的线是不可拆卸的，非模组电源的线有很多是多余的</li><li>半模组：半模组电源的主板供电线和 CPU 供电线不可拆卸。但是其余的的供电线是和全模组一样可以拆卸的</li><li>全模组：全模组电源的线都是可以拆卸的，可以用什么线插什么线</li></ul></li><li><strong>参考链接：</strong><ul><li><a href="https://zhuanlan.zhihu.com/p/83498194">https://zhuanlan.zhihu.com/p/83498194</a></li></ul></li></ul><h3 id="6-硬盘："><a href="#6-硬盘：" class="headerlink" title="6.硬盘："></a>6.硬盘：</h3><ul><li><p><strong>协议：</strong>建议选择 M.2 NVMe。读写速度快，路径短。注意要求主板上有相对应的接口</p></li><li><p><strong>品牌：</strong>三星、凯侠、西数</p></li><li><p><strong>参考链接：</strong></p><ul><li><a href="https://zhuanlan.zhihu.com/p/83510679">https://zhuanlan.zhihu.com/p/83510679</a></li></ul></li></ul><h3 id="7-CPU-散热"><a href="#7-CPU-散热" class="headerlink" title="7.CPU 散热"></a>7.CPU 散热</h3><ul><li><p><strong>类型：</strong></p><ul><li>水冷：有漏液等隐患，但是厂商大都能解决（暂不考虑）</li><li>风冷：有些 CPU 会自带散热器，只是不一定给力。所以可以考虑自己购买。要注意的地方是要保证机箱通风，将热量散出去</li></ul></li><li><p><strong>参考链接：</strong></p><ul><li><a href="https://zhuanlan.zhihu.com/p/82613024">https://zhuanlan.zhihu.com/p/82613024</a></li></ul></li></ul><h3 id="8-机箱"><a href="#8-机箱" class="headerlink" title="8.机箱"></a>8.机箱</h3><ul><li><strong>规格：</strong>E-ATX&gt;ATX&gt;M-ATX&gt;ITX</li><li><strong>注意：</strong>机箱规格一定要和主板规格协调好</li><li><strong>参考链接：</strong><ul><li><a href="https://zhuanlan.zhihu.com/p/83627944">https://zhuanlan.zhihu.com/p/83627944</a></li></ul></li></ul><h3 id="9-机箱风扇：（待考察）"><a href="#9-机箱风扇：（待考察）" class="headerlink" title="9.机箱风扇：（待考察）"></a>9.机箱风扇：（待考察）</h3><ul><li><strong>数量：</strong>建议进风 2 个，排风 1 个</li><li><strong>风道规划：</strong>没想好，先记住热空气会上浮，所以进风建议安在背面靠下，出风安在前方靠上或者顶部</li><li><strong>建议：</strong>风扇规格买一样的</li><li><strong>安装方式：</strong>（待收集）</li></ul><h3 id="10-装系统"><a href="#10-装系统" class="headerlink" title="10.装系统"></a>10.装系统</h3><ul><li><strong>方式：</strong>见知乎 “电脑 DIY” 收藏夹</li></ul><h3 id="11-配置清单"><a href="#11-配置清单" class="headerlink" title="11.配置清单"></a>11.配置清单</h3><table><thead><tr><th></th><th align="center">Intel CPU 配机方案（8000 以内）</th><th></th></tr></thead><tbody><tr><td>配件名称</td><td align="center">品牌型号</td><td>参考价格</td></tr><tr><td>CPU</td><td align="center">i7-10700F（散片）/（<span style="color:red">板 U 套装 2749</span>）</td><td>1859</td></tr><tr><td>主板</td><td align="center">微星（MSI）MAG B460M MORTAR WIFI 迫击炮电脑主板</td><td>849</td></tr><tr><td>内存条</td><td align="center">英睿达（Crucial）16GB(8G×2)套装 DDR4 3200 / 美商海盗船(USCORSAIR)DDR4 3200 16GB(8G×2)</td><td>499</td></tr><tr><td>显卡</td><td align="center">RTX 2060Super / RTX 3060Ti</td><td>3000</td></tr><tr><td>CPU 散热</td><td align="center">九州风神 （DEEPCOOL）大霜塔 CPU 散热器</td><td>219</td></tr><tr><td>固态硬盘</td><td align="center">西部数据 SN750 500GB SSD 固态硬盘 M.2 接口(NVMe 协议)</td><td>579</td></tr><tr><td>电源</td><td align="center">振华（SUPER FLOWER）额定 650W LEADEX HG 650W 电脑电源</td><td>639</td></tr><tr><td>机箱</td><td align="center">爱国者（aigo）炫影 3 京东定制版 黑色电脑机箱（标配 3 只 RGB 风扇/蜂窝玻璃面板/ATX 主板/360 冷排）</td><td>239</td></tr><tr><td>总计</td><td align="center"></td><td></td></tr></tbody></table><h3 id="装机视频"><a href="#装机视频" class="headerlink" title="装机视频"></a>装机视频</h3><ul><li>见 B 站 “电脑 DIY” 收藏夹</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-CPU：&quot;&gt;&lt;a href=&quot;#1-CPU：&quot; class=&quot;headerlink&quot; title=&quot;1. CPU：&quot;&gt;&lt;/a&gt;1. CPU：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;散片与盒装：&lt;/strong&gt;散片价格便宜，但容易踩坑，如果散片与盒装</summary>
      
    
    
    
    <category term="其他" scheme="https://blog.chanceyliu.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="电脑" scheme="https://blog.chanceyliu.com/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="DIY" scheme="https://blog.chanceyliu.com/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>Promise模拟请求</title>
    <link href="https://blog.chanceyliu.com/2021/09/20/Promise%E6%A8%A1%E6%8B%9F%E8%AF%B7%E6%B1%82/"/>
    <id>https://blog.chanceyliu.com/2021/09/20/Promise%E6%A8%A1%E6%8B%9F%E8%AF%B7%E6%B1%82/</id>
    <published>2021-09-20T07:30:41.000Z</published>
    <updated>2021-09-21T07:32:36.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Promise-模拟请求"><a href="#Promise-模拟请求" class="headerlink" title="Promise 模拟请求"></a>Promise 模拟请求</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>​ 在正常开发需求的过程中，我们开发前端页面是和后端开发接口同步进行的，经常性的会遇到后端接口还没完成的情况下需要模拟请求来看一下页面完整的效果，本篇写的是自己使用 promise 模拟一个异步请求。</p><h4 id="1-模拟请求"><a href="#1-模拟请求" class="headerlink" title="1. 模拟请求"></a>1. 模拟请求</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mockRequest = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> data = [];</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        data.push(&#123;</span><br><span class="line">          <span class="attr">id</span>: i.toString(),</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      resolve(data);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="2-获取数据"><a href="#2-获取数据" class="headerlink" title="2. 获取数据"></a>2. 获取数据</h4><ul><li>async/await 同步写法获取</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loadData = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> mockRequest();</span><br><span class="line">  <span class="built_in">console</span>.log(res); <span class="comment">// [&#123;id: &#x27;1&#x27;&#125;,&#123;id: &#x27;2&#x27;&#125;, ... ,&#123;id: &#x27;9&#x27;&#125;]</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>链式写法获取</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loadData = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  mockRequest().then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data); <span class="comment">// [&#123;id: &#x27;1&#x27;&#125;,&#123;id: &#x27;2&#x27;&#125;, ... ,&#123;id: &#x27;9&#x27;&#125;]</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Promise-模拟请求&quot;&gt;&lt;a href=&quot;#Promise-模拟请求&quot; class=&quot;headerlink&quot; title=&quot;Promise 模拟请求&quot;&gt;&lt;/a&gt;Promise 模拟请求&lt;/h3&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.chanceyliu.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Promise" scheme="https://blog.chanceyliu.com/tags/Promise/"/>
    
  </entry>
  
</feed>
